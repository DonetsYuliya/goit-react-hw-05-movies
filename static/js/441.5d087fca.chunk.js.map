{"version":3,"file":"static/js/441.5d087fca.chunk.js","mappings":"sKACA,MAAuB,+BAAvB,EAA6D,+B,0BCuB7D,EArBuB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAClBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQH,EAAOI,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAC9B,OACE,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CACED,UAAWC,EACXH,GAAIA,EACJI,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMV,GAJjB,SAMGK,KAPyBD,EAWjC,IAED,OAAO,wBAAKF,GACb,C,uJCUD,EA7BkB,SAAC,GAAkB,IAAhBS,EAAe,EAAfA,SACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SAgBpC,OACE,kBAAMR,SAVa,SAAAS,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACXL,IAAeI,EAAKE,SAASC,MAAMC,QACvCT,EAAgB,CAAEU,MAAOL,EAAKE,SAASC,MAAMC,QAC7Cf,EAAS,CAAEE,OAAAA,IACZ,EAGC,WACE,4BACE,kBAAOe,KAAK,OAAOC,KAAK,QAAQC,SAjBjB,SAAC,GAAgB,IAC5BJ,EAD2B,EAAbK,OACdL,MACRZ,EAAUY,EACX,OAgBG,mBAAQE,KAAK,SAAb,sBAGL,E,QCQD,EA/BmB,WACjB,OAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAeiC,EAAf,KACA,GAA4BpB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAoBA,OAdAiB,EAAAA,EAAAA,YAAU,WACHpB,GAAQC,EAAUE,EAAaG,IAAI,UAExC,IAAMe,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAgBtB,GAFzB,OAERuB,EAFQ,OAGdJ,EAAUI,GAHI,sDAKR,IAAIC,MAAJ,MALQ,yDAAH,qDAQfH,GACD,GAAE,CAACrB,EAAQG,KAGV,iBAAKV,UAAWC,EAAAA,EAAAA,UAAhB,WACE,SAAC,EAAD,CAAWI,SApBE,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAClBC,EAAUD,IAAWC,EAAUE,EAAaG,IAAI,SACjD,KAmBG,SAACmB,EAAA,EAAD,CAAgBvC,OAAQA,MAG7B,C,sLCjCKwC,E,OAAUC,EAAAA,OAAa,CAC3BC,QAAS,+BACTC,OAAQ,CACNC,QALY,mCAMZC,KAAM,KAIGC,EAAe,mCAAG,sGACNN,EAAQ,uBADF,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAKfZ,EAAe,mCAAG,WAAMR,GAAN,yFACNY,EAAQ,gBAAiB,CAC9CG,OAAQ,CACNf,MAAAA,KAHyB,uBACrBmB,EADqB,EACrBA,KADqB,kBAMtBA,EAAKC,SANiB,2CAAH,sDASfC,EAAgB,SAAA5C,GAE3B,OADamC,EAAQ,UAAD,OAAWnC,GAEhC,EAEY6C,EAAoB,SAAA7C,GAE/B,OADamC,EAAQ,UAAD,OAAWnC,EAAX,YAErB,EAEY8C,EAAuB,SAAA9C,GAElC,OADamC,EAAQ,UAAD,OAAWnC,EAAX,YAErB,C,mBCrCD,KAAgB,UAAY,yBAAyB,sBAAwB,qCAAqC,KAAO,oBAAoB,YAAc,2B","sources":["webpack://react-homework-template/./src/components/ListMovieItems/list-movie-items.module.css?7ef7","components/ListMovieItems/ListMovieItems.jsx","components/SearchBar/SearchBar.jsx","pages/MoviesPage.jsx","services/api.js","webpack://react-homework-template/./src/pages/pages.module.css?46e1"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"list-movie-items_item__FPKM4\",\"link\":\"list-movie-items_link__vEcM7\"};","import css from './list-movie-items.module.css';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst ListMovieItems = ({ movies }) => {\n  const location = useLocation();\n\n  const items = movies.map(({ id, title }) => {\n    return (\n      <li className={css.item} key={id}>\n        <Link\n          className={css.link}\n          id={id}\n          to={`/movies/${id}`}\n          state={{ from: location }}\n        >\n          {title}\n        </Link>\n      </li>\n    );\n  });\n\n  return <ul>{items}</ul>;\n};\n\nexport default ListMovieItems;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const valueQuery = searchParams.get('query');\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    setSearch(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    if (valueQuery === form.elements.event.value) return;\n    setSearchParams({ query: form.elements.event.value });\n    onSubmit({ search });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input type=\"text\" name=\"event\" onChange={handleChange} />\n      </label>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByName } from 'services/api';\nimport ListMovieItems from 'components/ListMovieItems/ListMovieItems';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport css from './pages.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchParams] = useSearchParams();\n\n  const onSearch = ({ search }) => {\n    setSearch(search) || setSearch(searchParams.get('query'));\n  };\n\n  useEffect(() => {\n    if (!search) setSearch(searchParams.get('query'));\n\n    const getMovies = async () => {\n      try {\n        const response = await getMoviesByName(search);\n        setMovies(response);\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n    getMovies();\n  }, [search, searchParams]);\n\n  return (\n    <div className={css.container}>\n      <SearchBar onSubmit={onSearch} />\n      <ListMovieItems movies={movies} />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nconst API_KEY = 'b77b3068ddcc2ce3ea23003328032394';\n\nconst instans = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n    page: 1,\n  },\n});\n\nexport const getTrendingFilm = async () => {\n  const { data } = await instans('/trending/movie/day');\n  return data.results;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await instans('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMoviesById = id => {\n  const data = instans(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesByIdCast = id => {\n  const data = instans(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMoviesByIdReviews = id => {\n  const data = instans(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"pages_container__-MxLQ\",\"movieDetailsContainer\":\"pages_movieDetailsContainer__YqV6r\",\"link\":\"pages_link__quo5+\",\"menuDetails\":\"pages_menuDetails__Wf6ox\"};"],"names":["movies","location","useLocation","items","map","id","title","className","css","to","state","from","onSubmit","useState","search","setSearch","useSearchParams","searchParams","setSearchParams","valueQuery","get","e","preventDefault","form","currentTarget","elements","event","value","query","type","name","onChange","target","setMovies","useEffect","getMovies","getMoviesByName","response","Error","ListMovieItems","instans","axios","baseURL","params","api_key","page","getTrendingFilm","data","results","getMoviesById","getMoviesByIdCast","getMoviesByIdReviews"],"sourceRoot":""}