{"version":3,"file":"static/js/247.f5773f39.chunk.js","mappings":"yNA+CA,UA3Ca,WACX,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,gHAIFC,EAAAA,EAAAA,IAAkBJ,GAJhB,gBAGFK,EAHE,EAGVC,KAAQD,KAEVN,EAAWM,GALC,sDAON,IAAIE,MAAJ,MAPM,yDAAH,qDAUbJ,GACD,GAAE,CAACH,IAEJ,IAAMQ,EAAWV,EAAQW,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,aAAkBC,EAAU,EAAdb,GAC7D,OACE,2BACE,gBACEc,IAAG,yCAAoCF,GACvCG,IAAKL,EACLM,MAAM,SAER,kCAAUN,MACV,uCAAeC,OAPRE,EAUZ,IAED,OACE,8BACsB,IAAnBf,EAAQmB,QACP,+EAEA,wBAAKT,KAIZ,C,sLC1CKU,E,OAAUC,EAAAA,OAAa,CAC3BC,QAAS,+BACTC,OAAQ,CACNC,QALY,mCAMZC,KAAM,KAIGC,EAAe,mCAAG,sGACNN,EAAQ,uBADF,uBACrBZ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKmB,SAFiB,2CAAH,qDAKfC,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAQ,gBAAiB,CAC9CG,OAAQ,CACNM,MAAAA,KAHyB,uBACrBrB,EADqB,EACrBA,KADqB,kBAMtBA,EAAKmB,SANiB,2CAAH,sDASfG,EAAgB,SAAA5B,GAE3B,OADakB,EAAQ,UAAD,OAAWlB,GAEhC,EAEYI,EAAoB,SAAAJ,GAE/B,OADakB,EAAQ,UAAD,OAAWlB,EAAX,YAErB,EAEY6B,EAAuB,SAAA7B,GAElC,OADakB,EAAQ,UAAD,OAAWlB,EAAX,YAErB,C","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesByIdCast } from 'services/api';\n\nconst Cast = () => {\n  const [useCast, setUseCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const {\n          data: { cast },\n        } = await getMoviesByIdCast(id);\n        setUseCast(cast);\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n    getCast();\n  }, [id]);\n\n  const castInfo = useCast.map(({ name, character, profile_path, id: key }) => {\n    return (\n      <li key={key}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n          alt={name}\n          width=\"100\"\n        />\n        <p>Name: {name}</p>\n        <p>Character: {character}</p>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      {useCast.length === 0 ? (\n        <p>We don't have any cast information for this movie.</p>\n      ) : (\n        <ul>{castInfo}</ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = 'b77b3068ddcc2ce3ea23003328032394';\n\nconst instans = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n    page: 1,\n  },\n});\n\nexport const getTrendingFilm = async () => {\n  const { data } = await instans('/trending/movie/day');\n  return data.results;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await instans('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMoviesById = id => {\n  const data = instans(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesByIdCast = id => {\n  const data = instans(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMoviesByIdReviews = id => {\n  const data = instans(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","useCast","setUseCast","id","useParams","useEffect","getCast","getMoviesByIdCast","cast","data","Error","castInfo","map","name","character","profile_path","key","src","alt","width","length","instans","axios","baseURL","params","api_key","page","getTrendingFilm","results","getMoviesByName","query","getMoviesById","getMoviesByIdReviews"],"sourceRoot":""}