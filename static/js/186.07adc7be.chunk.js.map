{"version":3,"file":"static/js/186.07adc7be.chunk.js","mappings":"yNA0CA,UAtCgB,WACd,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAILC,EAAAA,EAAAA,IAAqBJ,GAJhB,gBAGLK,EAHK,EAGbC,KAAQD,QAEVN,EAAcM,GALC,sDAOT,IAAIE,MAAJ,MAPS,yDAAH,qDAUhBJ,GACD,GAAE,CAACH,IAEJ,IAAMQ,EAAcV,EAAWW,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,QAAaC,EAAU,EAAdZ,GACrD,OACE,2BACE,qCAAaU,MACb,uBAAIC,MAFGC,EAKZ,IAED,OACE,8BACyB,IAAtBd,EAAWe,QACV,sEAEA,wBAAKL,KAIZ,C,sLCrCKM,E,OAAUC,EAAAA,OAAa,CAC3BC,QAAS,+BACTC,OAAQ,CACNC,QALY,mCAMZC,KAAM,KAIGC,EAAe,mCAAG,sGACNN,EAAQ,uBADF,uBACrBR,EADqB,EACrBA,KADqB,kBAEtBA,EAAKD,SAFiB,2CAAH,qDAKfgB,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAQ,gBAAiB,CAC9CG,OAAQ,CACNK,MAAAA,KAHyB,uBACrBhB,EADqB,EACrBA,KADqB,kBAMtBA,EAAKD,SANiB,2CAAH,sDASfkB,EAAgB,SAAAvB,GAE3B,OADac,EAAQ,UAAD,OAAWd,GAEhC,EAEYwB,EAAoB,SAAAxB,GAE/B,OADac,EAAQ,UAAD,OAAWd,EAAX,YAErB,EAEYI,EAAuB,SAAAJ,GAElC,OADac,EAAQ,UAAD,OAAWd,EAAX,YAErB,C","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesByIdReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [useReviews, setUseReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const {\n          data: { results },\n        } = await getMoviesByIdReviews(id);\n        setUseReviews(results);\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n    getReviews();\n  }, [id]);\n\n  const reviewsInfo = useReviews.map(({ author, content, id: key }) => {\n    return (\n      <li key={key}>\n        <h4>Author: {author}</h4>\n        <p>{content}</p>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      {useReviews.length === 0 ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        <ul>{reviewsInfo}</ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = 'b77b3068ddcc2ce3ea23003328032394';\n\nconst instans = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n    page: 1,\n  },\n});\n\nexport const getTrendingFilm = async () => {\n  const { data } = await instans('/trending/movie/day');\n  return data.results;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await instans('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMoviesById = id => {\n  const data = instans(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesByIdCast = id => {\n  const data = instans(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMoviesByIdReviews = id => {\n  const data = instans(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","useReviews","setUseReviews","id","useParams","useEffect","getReviews","getMoviesByIdReviews","results","data","Error","reviewsInfo","map","author","content","key","length","instans","axios","baseURL","params","api_key","page","getTrendingFilm","getMoviesByName","query","getMoviesById","getMoviesByIdCast"],"sourceRoot":""}